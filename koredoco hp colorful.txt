import { useState, useEffect } from "react";
import { motion } from "framer-motion";
import { Mail, Film, PlayCircle, Instagram, Youtube } from "lucide-react";

// Local fallback for "note" icon to avoid external import issues
function NoteIcon({ size = 24, className = "" }) {
  return (
    <svg
      width={size}
      height={size}
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
      className={className}
      aria-hidden="true"
    >
      {/* Sticky note with folded corner */}
      <path d="M7 3h7l5 5v9a4 4 0 0 1-4 4H7a4 4 0 0 1-4-4V7a4 4 0 0 1 4-4z" />
      <polyline points="14 3 14 8 19 8" />
      <path d="M8 13h8" />
      <path d="M8 17h5" />
    </svg>
  );
}

export default function Home() {
  const [form, setForm] = useState({ name: "", email: "", message: "" });

  // Lightweight runtime checks (acts as simple test cases)
  useEffect(() => {
    console.assert(typeof NoteIcon === "function", "NoteIcon component should be defined");
    console.assert(Array.isArray([1, 2, 3]) && [1, 2, 3].length === 3, "Sanity check for test harness");
  }, []);

  const works = [
    { title: "Promo Video", thumb: "/works/work1.jpg", href: "#" },
    { title: "Event Movie", thumb: "/works/work2.jpg", href: "#" },
    { title: "Short Film", thumb: "/works/work3.jpg", href: "#" },
    { title: "CM Project", thumb: "/works/work4.jpg", href: "#" },
    { title: "Music Video", thumb: "/works/work5.jpg", href: "#" },
    { title: "Documentary", thumb: "/works/work6.jpg", href: "#" },
  ];

  const news = [
    { date: "2025-09-01", text: "新しい制作実績を公開しました。" },
    { date: "2025-08-28", text: "Webサイトをリニューアルしました。" },
    { date: "2025-08-25", text: "新しいメンバーが加入しました。" },
    { date: "2025-08-20", text: "秋のキャンペーンを開始しました。" },
    { date: "2025-08-15", text: "夏季休業のお知らせ" },
    { date: "2025-08-10", text: "撮影機材を新調しました。" },
    { date: "2025-08-05", text: "制作スケジュールを更新しました。" },
    { date: "2025-08-03", text: "公式YouTubeに新作動画を公開しました。" },
    { date: "2025-08-02", text: "求人募集のお知らせ" },
    { date: "2025-08-01", text: "公式Instagramを開設しました。" },
  ];

  const scrollToContact = () => {
    const el = document.getElementById("contact");
    if (el) el.scrollIntoView({ behavior: "smooth" });
  };

  return (
    <div className="bg-black text-white font-sans">
      {/* Hero Section */}
      <section className="min-h-screen flex flex-col items-center justify-center text-center p-8 bg-black">
        <motion.img
          src="/logo.png"
          alt="KOREDOCO WORKS"
          initial={{ opacity: 0, scale: 0.9 }}
          animate={{ opacity: 1, scale: 1 }}
          transition={{ duration: 0.8 }}
          className="w-64 md:w-80 mb-6"
        />
        <motion.h1
          className="text-4xl md:text-6xl font-bold text-white mb-6"
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8, delay: 0.3 }}
        >
          想いをカタチに。
        </motion.h1>
        <button
          onClick={scrollToContact}
          className="mt-4 bg-pink-500 hover:bg-pink-600 text-white text-lg px-8 py-6 rounded-2xl shadow-lg"
        >
          お問い合わせはこちら
        </button>

        {/* Social Icons */}
        <div className="flex justify-center gap-8 mt-8">
          <a href="#" aria-label="Instagram" className="hover:text-pink-500">
            <Instagram className="w-10 h-10" />
          </a>
          <a href="#" aria-label="YouTube" className="hover:text-red-500">
            <Youtube className="w-10 h-10" />
          </a>
          <a href="#" aria-label="Note" className="hover:text-green-400">
            <NoteIcon className="w-10 h-10" />
          </a>
        </div>
      </section>

      {/* Works Section */}
      <section className="py-20 px-6 md:px-20 bg-black">
        <h2 className="text-4xl font-bold text-center text-pink-500 mb-12">
          制作実績
        </h2>
        <div className="grid md:grid-cols-3 gap-6">
          {works.map((w, i) => (
            <div
              key={i}
              className="rounded-xl overflow-hidden shadow-lg hover:shadow-pink-500/50 transition bg-gray-900"
            >
              <img
                src={w.thumb}
                alt={w.title}
                className="w-full h-40 object-cover"
              />
              <div className="p-3 flex items-center justify-between">
                <h3 className="font-semibold text-md text-yellow-400">
                  {w.title}
                </h3>
                <PlayCircle className="text-cyan-400 w-5 h-5" />
              </div>
            </div>
          ))}
        </div>
      </section>

      {/* Services Section */}
      <section className="py-20 px-6 md:px-20 bg-black">
        <h2 className="text-4xl font-bold text-center text-yellow-400 mb-12">
          サービス内容
        </h2>
        <div className="grid md:grid-cols-3 gap-8">
          {[
            { icon: <Film className="text-pink-500 w-10 h-10" />, title: "撮影" },
            { icon: <PlayCircle className="text-cyan-400 w-10 h-10" />, title: "編集" },
            { icon: <Mail className="text-yellow-400 w-10 h-10" />, title: "企画" },
          ].map((s, i) => (
            <div
              key={i}
              className="rounded-2xl p-6 shadow-lg hover:shadow-xl transition text-center bg-gray-900"
            >
              <div className="flex justify-center mb-4">{s.icon}</div>
              <h3 className="font-semibold text-lg text-white">{s.title}</h3>
            </div>
          ))}
        </div>
      </section>

      {/* News Section */}
      <section className="py-20 px-6 md:px-20 bg-black">
        <h2 className="text-4xl font-bold text-center text-pink-500 mb-12">
          更新情報
        </h2>
        <div className="max-w-2xl mx-auto space-y-4">
          {news.map((n, i) => (
            <div
              key={i}
              className="bg-gray-900 rounded-lg p-3 shadow hover:shadow-pink-500/30 transition"
            >
              <p className="text-sm text-gray-400 mb-1">{n.date}</p>
              <p className="text-base text-white">{n.text}</p>
            </div>
          ))}
        </div>
      </section>

      {/* Contact Section */}
      <section id="contact" className="py-20 px-6 md:px-20 bg-black">
        <h2 className="text-4xl font-bold text-center text-cyan-400 mb-12">
          お問い合わせ
        </h2>
        <form
          className="max-w-xl mx-auto space-y-6"
          onSubmit={(e) => {
            e.preventDefault();
            alert("送信ありがとうございます！");
          }}
        >
          <input
            type="text"
            placeholder="お名前"
            value={form.name}
            onChange={(e) => setForm({ ...form, name: e.target.value })}
            className="w-full border border-gray-600 rounded-lg px-4 py-3 bg-gray-800 text-white"
          />
          <input
            type="email"
            placeholder="メールアドレス"
            value={form.email}
            onChange={(e) => setForm({ ...form, email: e.target.value })}
            className="w-full border border-gray-600 rounded-lg px-4 py-3 bg-gray-800 text-white"
          />
          <textarea
            placeholder="メッセージ"
            value={form.message}
            onChange={(e) => setForm({ ...form, message: e.target.value })}
            className="w-full border border-gray-600 rounded-lg px-4 py-3 h-32 bg-gray-800 text-white"
          />
          <button
            type="submit"
            className="w-full bg-pink-500 hover:bg-pink-600 text-white text-lg py-6 rounded-2xl shadow-lg"
          >
            送信する
          </button>
        </form>
      </section>

      {/* Footer */}
      <footer className="py-10 bg-black text-white text-center border-t border-gray-800">
        <p>© {new Date().getFullYear()} KOREDOCO WORKS</p>
      </footer>
    </div>
  );
}
